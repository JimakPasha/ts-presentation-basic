https://www.typescriptlang.org/play?#code/PTAEF5K6dv4VAUCCi6kEgggmEEKwggWEF0F4QQDhBc104UxLa6ElGkBjAewDsBnVgGwFMAdD1YBzABQByABIBLADSgAKgE8ADnwDKzAE4zVAFwCEEgJQBuJkgBmAV3bN9MjqCutWYk6ADeSUH9BsXLyCwuLSfDzCxuZIAL6WqPRJydQU0EoaoID8IIB8IIA8IDmAzCCADCC4gEIgoETk+DlZgMIggIIggFwgxWWAMiCgOYASICSAjCBNJGnQqcmjtEy29o7OACasNgBG-GIAHgBcoOw2ALYLfNqePv6gK77+2nz6NtrsJ6AAVKAATBbxSHOLywCs5qCoAIwABmoHyWfEknH02lMZj+YH22lY2iYiTGaPgIySoEAiCDFQDsIDlsIBpEHIZRIWSJQ0omPRtOQTH4+lAAEMIKAJJDdOwRBILAzLqAFmygYC+YxGQE2VCbHwxUgJTNmfo+Gz2HwAO6gAAiSvBMRRNDpRpplFAgAQQIhEHJlYqAMRASIB5EFAZNy2D89BNRrRlglW22Gz9e20wsBop9As5G05Mm5bIkAClmcwANa88NMmScACCM22MY2Czc-GZt3AoGlsoShq96M9pswROwOXwzvJhPdSTrNc7-KZfv+IbDvdAnIHZYTSdTcolmZzefYY-L2hlctR3bGqUAWCBFfDFSrkBplHIkCqAARBig1AOIgJ8brQ6RD3xWwR7yrRIl9wzRIgE4QUDEpsti6hIAPz3F267jAaoD-J426FLuoB5JSOS9IAUiAOtgJCANwggxZLgp64HkxBEHUgByIAoVr7tkp7HqQ9rFDheIkDR2AMYMuCAIog8oCmwwjaHyvFIsKFiCcG44XDMaaiVKy6VlBTwmNxTLcNsfAAHI7EGbJWMyPCcHJrjBmIM5sqKoAyKAAA8oAAMywjIADUDmHGcfggCp6mafsbIyK8VZUhB4xrskoCADggF4NCQxIBdSwWBXQliBJCAS8EinBsgA2hIEkSAoEhLDKuXsuqAAWMjKhIAC6ImpdonACKoNicCVkhLJOMLUKJ9WNc1YgVvqqRui0TT5KADRYXUl6lKAE2Xl01QoU+WEOu0oDFJa1p2iQpHAYwSV9syqmcFGUIxiIGWVZl1X+fg2B1ERp5EESv6vg0kXYCwHDJTwzKQmph18OlZYZa5oBZYAJCAcTULFVXIoNZYAeCCnlhhLFLD8MSIAGCCsVa2Do9dUGve9Y2gOeeJPXkgwusUlN7V9fZeXVWbsDMGindyQNgyKeUAOKIjM7CsEVEgALIxpwqbXYG+zZizbNciI3VNS1EgAEIXJCHXS0zcvs4rDXK2IAAcCmrtW8UJXF6CgNup5lLggBsIKAfU2Ko-CeJ2VsW4gdNcEyMxcsmbJHP4okbPliLquwuWg8wzLaIW7C6jMGwVnDxycDYIjxxsAAsgJw28+0pT9mUR6wUdFWnoD59VcLUShWGEXubovgol5HohlIFA7hHZPhuD1Daq25KeDo1E0n0-Rl-yXeObUpry9c93342TcU36UXhBG1ARhA4atVTOjk7ed4AoiDWrgOH+SQDRZOe2DLX39+N4RdQk7kBSAJIgbSkeWrv8E+n7EuzJ-gbAytGbkChCzBBLAobWc8wbl0rgoautcLCoF4qAmeiD8o-UXrCVA9tt4dDKHUCovQ6iEAqN0PoLQFBlAEE0AQf4jw0V-IAWRAm5ESIBUI8l5KI1Cwr3IgoBehElWjA4s7AkBAA

// ================================================
// ================== Введение ====================
// ================================================



console.log('Hi, TypeScript!');



function foo() {
    console.log('Hello!');
}



// ================================================
// ======= TS помогает не допускать ошибки ========
// ================================================


function double(x: number) {
    x
    return x * 2;
}

double(5); // 10
//double('str'); // error


// ================================================
// ================= Базовые типы =================
// ================================================



let a = 'string';



let b = 100;



let c = true;



let date = new Date();



// ================================================
// =============== Аннотация типов  ===============
// ================================================



let num: number = 100;



let str: string = 'Jack';



let isAdmin: boolean = true;



// ================================================
// ================= Вывод типов  =================
// ================================================



let num1 = 100;



let str1 = 'Jack';



let isAdmin1 = true;



// ================================================
// Когда не стоит расчитывать на автоматический вывод типов?*
// ================================================



// 1) Когда мы объявили переменную, но не проинициализировали её
let color;

color = 1;
color = 'red';
color = true;



// 2)
let someNumber = false;

for (let i = 0; i < 3; i++) {
    //someNumber = i;
}



// ================================================
// ==================== Массивы ===================
// ================================================



const colors = ['red', 'blue', 'white'];
colors.push('black');
//colors.push(true);


// в каком случае лучше добавлять аннотацию?

const names: string[] = [];



// двумерный массив
const lastNames = [
    ['Фёдоров'],
    ['Орлова'],
    ['Иванов'],
];



// массив с разными типами

const numbersAndStrings = [100, 'Grodno', 'Minsk'];
numbersAndStrings.push('Brest');
numbersAndStrings.push(82);



// ================================================
// ================ Кортеж (tuple) ================
// ================================================

const drink = {
    color: 'brown',
    carbonated: true,
    sugar: 40,
}

const cola = ['brown', true, 40]; // проблема в том, что мы можем перепутать порядок
cola[1] = 'black'; // можем случайно переопределить не то, что хотели



// исправляем проблему с помощью tuple
const cola1: [string, boolean, number] = ['brown', true, 40];
// cola1[1] = 'black'; // теперь тут будет ошибка, т.к. второй элемент точно должен быть boolean
